
package org.de.metux.unitool.db;

import org.de.metux.unitool.base.*;
import org.de.metux.unitool.db.*;
import org.de.metux.util.*;

// FIXME: move this to sub-package 
public class StoreLibtool
{
    private static String _fixstr(String str)
    {
	if (str==null)
	    return "";
	else
	    return str;
    }

    private static String _fixstr(String[] str)
    {
	if (str==null)
	    return "";
	
	String res = null;
	for (int x=0; x<str.length; x++)
	{
    	    if (res==null)
		res = str[x];
	    else
		res += " "+str[x];
	}
	return res;
    }    

    public static void store(ObjectInfo inf, String lo_file)
    {
	String text = 
	    "# "+lo_file+" - a libtool object file\n"+
	    "# Generated by ltmain.sh - GNU libtool 1.5.0a\n"+
	    "#\n"+
	    "# Well, in fact it is generated by unitool's libtool emulation\n"+
	    "\n"+
	    "# Name of the PIC object\n"+
	    "pic_object='"+inf.object_pic+"'\n"+
	    "\n"+
	    "# Name of the non-PIC object\n"+
	    "non_pic_object='"+inf.object_nonpic+"'\n"+
	    "\n";
	
	StoreFile.store(lo_file,text);
    }    

    public static void store(ObjectInfo inf)
    {
	store(inf,inf.lo_file);    
    }

    public static void store(LibraryInfo inf, String la_file)
    {
	String fn_short = PathNormalizer.basename(la_file);
	
	// compute dependencies
	String depnames = "";
	
	if (inf.dependency_names!=null)
	    for (int x=0; x<inf.dependency_names.length; x++)
		depnames += " "+inf.dependency_names[x];

	String text =
	    "# "+fn_short+" - a libbtool library file\n"+
	    "# Generated by ltmain.sh - GNU libtool 1.5.0a\n"+
	    "#\n"+
	    "# Well, in fact generated by unitool \n"+
	    "#\n"+
	    "\n"+
	    "# The name that we can dlopen(3).\n"+
	    "dlname='"+_fixstr(inf.dlname)+"'\n"+
	    "\n"+
	    "# Names of this library.\n"+
	    "library_names='"+_fixstr(inf.dynamic_libnames)+"'\n"+
	    "\n"+
	    "# The name of the static archive.\n"+
	    "old_library='"+_fixstr(inf.arname)+"'\n"+
	    "\n"+
	    "dependency_libs='"+depnames+"'\n"+
	    "\n"+
	    "# Version information for "+inf.name+".\n"+
	    "current="+inf.version_current+"\n"+
	    "age="+inf.version_age+"\n"+
	    "revision="+inf.version_revision+"\n"+
	    "\n"+
	    "release='"+_fixstr(inf.release)+"'\n"+
	    "\n"+
	    "# Is this an already installed library ?\n"+
	    "installed="+(inf.installed ? "yes" : "no")+"\n"+
	    "\n"+
	    "# Files to dlopen/dlpreopen\n"+
	    "dlopen='"+_fixstr(inf.param_dlopen)+"'\n"+
	    "dlpreopen='"+_fixstr(inf.param_dlpreopen)+"'\n"+
	    "\n"+
	    "# Directory that library needs to be installed in\n"+
	    "libdir='"+_fixstr(inf.libdir)+"'\n"+
	    "\n";

	StoreFile.store(la_file, text);
    }
}
