<project name="UniTool" default="all" basedir=".">
    <property environment="env" />

    <!-- user configurable locations -->
    <property name="destdir"          value="" />
    <property name="prefix"           value="${env.HOME}/.usr" />
    <property name="libdir"           value="${prefix}/lib" />
    <property name="datadir"          value="${prefix}/share" />
    <property name="libexecdir"       value="${prefix}/libexec" />
    <property name="sysconfdir"       value="${prefix}/etc" />
    <property name="pkgconfigdir"     value="${libdir}/pkgconfig" />
    <property name="java-runtime"     value="java" />
    <property name="JMETUX_CLASSPATH" value="${env.JMETUX_CLASSPATH}" />

    <property name="script_prefix"           value="${libexecdir}/unitool" />
    <property name="script_pkg_config_fixup" value="${script_prefix}/pkg-config-fixup" />
    <property name="script_run_unitool"      value="${script_prefix}/run-unitool" />
    <property name="script_run_libtool"      value="${script_prefix}/run-libtool" />

    <property name="version"         value="0.1.2" />

    <property name="src"             value="."              />
    <property name="build"           value=".build"         />
    <property name="build-lib"       value="${build}/lib"   />
    <property name="build-tests"     value="${build}/tests" />
    <property name="jarfile"         value="${build}/unitool.jar" />
    <property name="pkgconfigfile"   value="jar.unitool.pc" />

    <property name="metux-runtime"   value="${JMETUX_CLASSPATH}" />
    <property name="unitool-runtime" value="${datadir}/unitool/unitool.jar" />

    <property name="dest_unitool_dir"      value="${destdir}${libexecdir}/unitool" />
    <property name="dest_run_unitool"      value="${dest_unitool_dir}/run-unitool" />
    <property name="dest_run_libtool"      value="${dest_unitool_dir}/run-libtool" />
    <property name="dest_pkg_config_fixup" value="${dest_unitool_dir}/pkg-config-fixup" />

    <target name="compile-base">
	<mkdir dir="${build-lib}" />
	<javac destdir="${build-lib}" srcdir="${src}/base" debug="on" classpath="${JMETUX_CLASSPATH}:." includeantruntime="false">
            <include name="CCompilerParam.java"/>
            <include name="Command.java"/>
            <include name="EInstallFailed.java"/>
            <include name="EMissingDBFile.java"/>
            <include name="EParameterInvalid.java"/>
            <include name="EParameterMissing.java"/>
            <include name="EPkgConfigBrokenVariableReference.java"/>
            <include name="EPkgConfigError.java"/>
            <include name="EPkgConfigMissingProperty.java"/>
            <include name="EPkgConfigParseError.java"/>
            <include name="EPkgConfigUnhandledProperty.java"/>
            <include name="EUnhandledCompilerFlag.java"/>
            <include name="EUnitoolError.java"/>
            <include name="EVersionSyntaxError.java"/>
<!--            <include name="Hacks.java"/> -->
            <include name="InstallerParam.java"/>
            <include name="LibraryInfo.java"/>
            <include name="LinkerParam.java"/>
            <include name="ManualPageInfo.java"/>
            <include name="ObjectInfo.java"/>
            <include name="PackageInfo.java"/>
            <include name="ToolConfig.java"/>
            <include name="ToolParam.java"/>
            <include name="ToolType.java"/>
	</javac>
    </target>

    <target name="compile-db" depends="compile-base">
	<mkdir dir="${build-lib}" />
	<javac destdir="${build-lib}" srcdir="${src}/db" debug="on" classpath="${JMETUX_CLASSPATH}:${build-lib}:." includeantruntime="false">
            <include name="LibraryInfo.java"/>
            <include name="LoadLibtool.java"/>
            <include name="LoadLibtoolArchive.java"/>
            <include name="LoadLibtoolObject.java"/>
            <include name="LoadPkgConfig.java"/>
            <include name="ObjectInfo.java"/>
            <include name="PackageInfo.java"/>
            <include name="QueryPkgConfig.java"/>
            <include name="StoreLibtool.java"/>
            <include name="StoreLibtoolArchive.java"/>
            <include name="StoreLibtoolObject.java"/>
            <include name="StorePkgConfig.java"/>
            <include name="UnitoolConf.java"/>
	</javac>
    </target>

    <target name="compile-tools" depends="compile-base,compile-db">
	<mkdir dir="${build-lib}" />
	<javac destdir="${build-lib}" srcdir="${src}/tools" debug="on" classpath="${JMETUX_CLASSPATH}:${build-lib}:." includeantruntime="false">
            <include name="CCompiler.java"/>
            <include name="Gcc_cmdline.java"/>
            <include name="LD_cmdline.java"/>
            <include name="LTLibraryInstaller.java"/>
            <include name="LinkExecutable.java"/>
            <include name="LinkSharedLibrary.java"/>
            <include name="LinkStaticLibrary.java"/>
            <include name="LinkerBase.java"/>
	</javac>
    </target>

    <target name="compile-unitool" depends="compile-base,compile-db">
	<mkdir dir="${build-lib}" />
	<javac destdir="${build-lib}" srcdir="${src}/unitool" debug="on" classpath="${JMETUX_CLASSPATH}:${build-lib}:." includeantruntime="false">
            <include name="Build.java"/>
            <include name="Install.java"/>
            <include name="Main.java"/>
<!--            <include name="PIBuild.java"/> -->
            <include name="PkgConfigFixup.java"/>
            <include name="Query.java"/>
            <include name="Unitool.java"/>
	</javac>
    </target>

    <target name="compile-libtool" depends="compile-base,compile-db,compile-tools">
	<mkdir dir="${build-lib}" />
	<javac destdir="${build-lib}" srcdir="${src}/libtool" debug="on" classpath="${JMETUX_CLASSPATH}:${build-lib}:." includeantruntime="false">
            <include name="CmdCompile.java"/>
            <include name="CmdInstall.java"/>
            <include name="CmdLink.java"/>
            <include name="Main.java"/>
	</javac>
    </target>

    <target name="${pkgconfigfile}">
<echo file="${pkgconfigfile}">
prefix=${prefix}
jarfile=${unitool-runtime}
classpath=${JMETUX_CLASSPATH}:${unitool-runtime}
script_prefix=${script_prefix}
script_pkg_config_fixup=${script_pkg_config_fixup}
script_run_unitool=${script_run_unitool}
script_run_libtool=${script_run_libtool}

Name: (jar) metux universal toolchain wrapper
Description: a platform-agnostic wrapper for calling toolchain commands
Version: ${version}
Libs:
Cflags:
</echo>
    </target>

    <target name="${jarfile}" depends="compile-base,compile-db,compile-tools,compile-unitool,compile-libtool">
	<jar jarfile="${jarfile}" basedir="${build-lib}" />
    </target>

    <target name="compile" depends="${jarfile},${pkgconfigfile}" />
    <target name="all"     depends="compile" />

    <target name="clean">
	<delete dir="${build-tests}" />
	<delete dir="${build-lib}"   />
	<delete dir="${build}"       />
	<delete file="${jarfile}"    />
	<delete file="${pkgconfigfile}" />
    </target>

    <target name="install" depends="compile,${pkgconfigfile}">
	<mkdir dir="${destdir}${datadir}/unitool" />
	<mkdir dir="${destdir}${libexecdir}/unitool" />
	<copy file="${jarfile}"   todir="${destdir}${datadir}/unitool" />

	<!-- install the pkg-config-fixup script -->
	<delete file="${dest_pkg_config_fixup}" />
	<echo file="${dest_pkg_config_fixup}">#!/bin/bash
UNITOOL_PREFIX="${prefix}"
UNITOOL_JVM="${java-runtime}"
UNITOOL_MAIN="org.de.metux.unitool.unitool.Main"

export CLASSPATH="$CLASSPATH:${JMETUX_CLASSPATH}:${unitool-runtime}"

if [ ! "$SYSROOT" ]; then
    echo "$0: Missing \$SYSROOT"
    exit;
fi

for i in $* ; do 
    echo "Processing: $i"
    $UNITOOL_JVM $UNITOOL_MAIN 		\
	--pkgconfig-fixup 		\
	source "$i"			\
	output "$i.out"			\
	system-root "$SYSROOT"	&amp;&amp; mv "$i.out" "$i"
done
	</echo>
	<chmod file="${dest_pkg_config_fixup}" perm="u=rwx,go=rx" />

	<!-- install the run-unitool script -->
	<delete file="${dest_run_unitool}" />
	<echo file="${dest_run_unitool}">#!/bin/bash
UNITOOL_PREFIX="${prefix}"
UNITOOL_JVM="${java-runtime}"
UNITOOL_MAIN="org.de.metux.unitool.unitool.Main"

export CLASSPATH="$CLASSPATH:${JMETUX_CLASSPATH}:${unitool-runtime}"
$UNITOOL_JVM $UNITOOL_MAIN "$@"
	</echo>
	<chmod file="${dest_run_unitool}" perm="u=rwx,go=rx" />


	<!-- install the run-libtool script -->
	<delete file="${dest_run_libtool}" />
	<echo file="${dest_run_libtool}">#!/bin/bash
UNITOOL_PREFIX="${prefix}"
UNITOOL_JVM="${java-runtime}"
UNITOOL_MAIN="org.de.metux.unitool.libtool.Main"

export CLASSPATH="$CLASSPATH:${JMETUX_CLASSPATH}:${unitool-runtime}"
$UNITOOL_JVM $UNITOOL_MAIN "$@"
	</echo>
	<chmod file="${dest_run_libtool}" perm="u=rwx,go=rx" />

	<!-- install the pkgconfig descriptor -->
	<mkdir dir="${destdir}${pkgconfigdir}" />
	<copy file="${pkgconfigfile}" todir="${destdir}${pkgconfigdir}" />

    </target>

</project>
